
# Park Planing
# - Seperate Z-Hop for parking and resuming is doing Pause and Resume
# - Parking is only moving in X and Y!
#   - Paring can be done on OzzeStop- or on Purge- position
# - UnParking moves back to to Purge- position if needed
#   - if UnParking is done by RESUME(from pause) the RESUME neads to restore the GCODE_STATE- possition
## Gcode Maros will be:
# - CHANGE_FILAMENT -oldtemp[0-max] -newtemp[0-max] -purge[0-1] -ZLIFT[0-max]
# - PAUSE   -mode['purge', 'oozestop', 'stay', 'XY'] -X[0-max] -Y[0-max] -ZHOP[0-max] -WHIPE[0-1]
# - UNLOAD  -oldtemp[0-max] -mode[0-?] -purge[0-max]
#   - Orbiter2 Unload
# - LOAD    -newtemp[0-max] -whipe[0-1] -purge[0-max]
#   - Orbiter2 macros?!
# - RESUME  -newtemp[0-max] -whipe[0-1]
# - PARK    -X[0-max] -Y[0-max]

[gcode_macro _PARK_VARIABLES]
variable_save_x: 80
variable_save_y: 306
variable_park_x: 4
variable_park_y: 307
#variable_purge_x: 57
#variable_purge_y: 306
gcode:



[gcode_macro PARK]
gcode:
    # This macro is used to park the toolhead in a save position
    # It is used by the PRINT_START and PRINT_END macros
    # It can be used to park the toolhead before a print or after a print
    # It can be used to park the toolhead before a pause or after a pause
    # It can be used to park the toolhead before a resume or after a resume
    PARK_TOOLHEAD

[gcode_macro UNPARK]
	variable_save_x: 80
	variable_save_y: 306
	variable_park_x: 4
	variable_park_y: 307
	#variable_purge_x: 57
	#variable_purge_y: 306
gcode:
	{% set do_whipe = params.WHIPE|default(0)|int %}
	SAVE_GCODE_STATE name=save_resume_parked_toolhead

	{% if do_whipe %}
		NOZZLE_ZIGZAG DIR=1 WHIPES=6 SPEED=8000 HUB=4 LEN_X=7 END_X=3
	{% else %}
		G0 F6000 Y{301}
		G0 X{save_x}
	{% endif %}

	RESTORE_GCODE_STATE name=save_resume_parked_toolhead



[gcode_macro PARK_TOOLHEAD] # testing a simple parking on ozzestop possition
	variable_save_x: 80
	variable_save_y: 306
	variable_park_x: 4
	variable_park_y: 307
	#variable_purge_x: 57
	#variable_purge_y: 306
gcode:
	#{% set purge = params.PURGE|default(0)|int %} 		# purging x mm
	{% set z_hop = params.ZHOP|default(0)|float %} 		# z-hop in mm before+after parking
	SAVE_GCODE_STATE name=save_park_toolhead
	SMART_HOME_XYZ

	{% if z_hop > 0%}
		RELATIVE_COOR
		G0 F6000 Z{z_hop}
	{% endif %}

	ABSOLUTE_COOR
	# Move to save possition
	G0 F6000 X{save_x}
	G0 Y{save_y-7}
	# move to park
	G0 Y{park_y-7}
	G0 X{0}
	G0 Y{park_y}
	G0 X{park_x}

	RESTORE_GCODE_STATE name=save_park_toolhead




[gcode_macro _TEST_PARK]
	variable_start: [100, 306]
	variable_stopp: [  5, 306]
	variable_brush_min: [ 0, 263]
	variable_brush_max: [65, 292]
	variable_unsave_y: 302 					# the pos.Y at wich a more or less save movement of ToolHead on X is possible to bring it back to the savezone
gcode:
	{% set zlift = params.ZLIFT|default(2)|int %}
	{% set current_possiton = printer.toolhead.position %}
	M118 G0 Z{zlift}
	
	# Move X and Y to {start} position
	{% if current_possiton.x < brush_max[0] %}
		M118 x is < {brush_max[0]}
		{% if current_possiton.y > brush_min[1]%}
			M118 y is < {brush_max[1]}
			M118 G0 Y{unsave_y}
			M118 G0 X{start[0]}
			M118 G0 Y{start[1]}
		{% else %} 		# Y is not far enoth on the brush, just move X first
			M118 y is < {brush_min[1]}
			M118 G0 X{start[0]}
			M118 G0 Y{start[1]}
		{% endif %}
	{% else %} 			# X is not far enoth on the brush, just move Y first
		M118 x is > {brush_max[0]}
		M118 G0 Y{brush_min[1]-50}
		M118 G0 X{start[0]}
		M118 G0 Y{start[1]}
	{% endif %}

	# X and Y are on {start} posstion!