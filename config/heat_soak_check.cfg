# This Macro collection gives a signal if the heated-bed is soakted with the target temp or not
# --------------------------------------------
# 
# - Its simple done over time, to be acacct over a time period of about 5min, see <target_soak_time>

[delayed_gcode HEAT_SOAK_LOOP]
initial_duration: 10
gcode:
	{% set loop_pause = 5 %}
	{% set loop_pause_ms = loop_pause * 1000 %}

	COUNTDOWN_TEMP_TIME DURATION={loop_pause_ms}

	{% if printer.print_stats.state|lower == "standby" %}
		UPDATE_DELAYED_GCODE ID=HEAT_SOAK_LOOP DURATION={loop_pause}
	{% endif %}



# Using x times from 30 to 110 in steps of 10
[gcode_macro COUNTDOWN_TEMP_TIME]
variable_temps:          [40,       50,    60,     70,     80,     90,     95,    100,    105]	# teperature at wich it needs to wait
variable_time_remaining: [60000, 60000, 180000, 300000, 300000, 300000, 300000, 300000, 300000] # time to wait in ms
variable_default_time: 	 [60000, 60000, 180000, 300000, 300000, 300000, 300000, 300000, 300000] # times to wich its resetting
gcode:
	{% set duration = params.DURATION|default(1000)|int %} # Numer of ms to count down at once
	{% set bed_target = printer['heater_bed'].target %}
    {% set updated = [] %}
	{% set last_tmp = 0%}

    {% for i in range(time_remaining | length) %}
        {% set update_time = time_remaining[i] %}
		{% set check_temp = temps[i] %}
		{% set bed_temp = printer['heater_bed'].temperature%}

		{% if bed_temp >= check_temp %}
			{% if update_time - duration >= 0 %}
				{% set _ = updated.append(update_time - duration) %}
			{% else %}
				{% set _ = updated.append(0) %}
			{% endif %}
		{% else %}
			{% set _ = updated.append(update_time) %}
		{% endif %}

		# Update the array
		{% set _ = updated.append(update_time) %}
        #{action_respond_info("Index " ~ i ~ ": Original=" ~ new_time ~ ", New=" ~ (new_time - 1))}
    {% endfor %}

    SET_GCODE_VARIABLE MACRO=COUNTDOWN_TEMP_TIME VARIABLE=time_remaining VALUE="{ updated }"
    #RESPOND PREFIX="Countdown" MSG="Updated time_remaining: { updated }"


[gcode_macro HEAT_SOAK_VARS]
variable_time_left_below_40: 60000
variable_time_left_below_50: 60000
variable_time_left_below_60: 60000
variable_time_left_below_70: 300000 # = 5*60*1000
variable_time_left_below_80: 300000 # = 5*60*1000
variable_time_left_below_90: 300000 # = 5*60*1000
variable_time_left_below_100: 300000 # = 5*60*1000
variable_time_left_below_110: 300000 # = 5*60*1000
gcode:
    M105
	M118 Never use this!

#[delayed_gcode HEAT_SOAK_HANDLER]
#initial_duration: 5
#gcode:
#	#M118 Welcome time!
#    {% set new_50 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_50 - 5 %}
#    
#	SET_GCODE_VARIABLE MACRO=HEAT_SOAK_VARS VARIABLE=time_left_below_50 VALUE={new_50}
#	
#	{% if printer.print_stats.state|lower == "standby" %}
#		UPDATE_DELAYED_GCODE ID=HEAT_SOAK_HANDLER DURATION=5
#	{% endif %}

[gcode_macro GET_HEAT_SOAK]
gcode:
	{% set remainings = printer['gcode_macro COUNTDOWN_TEMP_TIME'].time_remaining %}
	{% set temps = printer['gcode_macro COUNTDOWN_TEMP_TIME'].temps %}

    RESPOND PREFIX="HeatSoak" MSG="time in s: {remainings}"
    RESPOND PREFIX="At Temp " MSG="for temp°: {temps}"


[gcode_macro GET_STATE]
gcode:
	{% if printer.print_stats.state|lower == "printing" %}
		M118 PRINTING
	{% elif printer.print_stats.state|lower == "standby" %}
		M118 STANDBY
	{% else %}
		M118 In error or other state
	{% endif %}


    
#------------------	
##	{% set new_70 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_70 - 5 %}
##    {% set new_80 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_80 - 5 %}
##    {% set new_90 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_90 - 5 %}
##    {% set new_100 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_100 - 5 %}
##    {% set new_110 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_1
##	SET_GCODE_VARIABLE MACRO=HEAT_SOAK_VARS VARIABLE=time_left_below_70 VALUE={new_70}
##	SET_GCODE_VARIABLE MACRO=HEAT_SOAK_VARS VARIABLE=time_left_below_80 VALUE={new_80}
##	SET_GCODE_VARIABLE MACRO=HEAT_SOAK_VARS VARIABLE=time_left_below_90 VALUE={new_90}
##	SET_GCODE_VARIABLE MACRO=HEAT_SOAK_VARS VARIABLE=time_left_below_100 VALUE={new_100}
##	SET_GCODE_VARIABLE MACRO=HEAT_SOAK_VARS VARIABLE=time_left_below_110 VALUE={new_110}10 - 5 %}
##
##	{% set below_70 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_70/1000|round(0)|int %}
##	{% set below_80 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_80/1000|round(0)|int %}
##	{% set below_90 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_90/1000|round(0)|int %}
##	{% set below_100 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_100/1000|round(0)|int %}
##	{% set below_110 = printer['gcode_macro HEAT_SOAK_VARS'].time_left_below_110/1000|round(0)|int %}
##
##    RESPOND PREFIX="HeatSoak" MSG="Below  70°C: {below_70} s"
##    RESPOND PREFIX="HeatSoak" MSG="Below  80°C: {below_80} s"
##    RESPOND PREFIX="HeatSoak" MSG="Below  90°C: {below_90} s"
##    RESPOND PREFIX="HeatSoak" MSG="Below 100°C: {below_100} s"
##    RESPOND PREFIX="HeatSoak" MSG="Below 110°C: {below_110} s"

#[gcode_macro vars_heat_soak]
#variable_soak_target_time:5000
#variable_soak_current_time:0
#variable_soak_target_temp:0.0
#variable_soak_current_temp:0.0
#gcode:
#	{% set bed_temp = printer.heater_bed.temperature %}
#	#{% set bed_target = printer.heater_bed.target%}
#	M118 bed_temp is {printer.heater_bed.temperature}
#	M118 target   is {printer.heater_bed.temperature}
#	M118 time done:  {soak_current_time}
#	#SET_GCODE_VARIABLE MACRO=vars_heat_soak VARIABLE=soak_current_temp VALUE={printer.heater_bed.temperature}
#	#SET_GCODE_VARIABLE MACRO=vars_heat_soak VARIABLE=soak_target_temp VALUE={printer.heater_bed.target}
#
#	#new in april:
#	{% set new_time = soak_current_time + 2 %}
#    SET_GCODE_VARIABLE MACRO=vars_heat_soak VARIABLE=soak_current_time VALUE={new_time}
#    #RESPOND PREFIX="TempReport" MSG="Time: {new_time}s | Extruder temp requested"
#    UPDATE_DELAYED_GCODE ID=vars_heat_soak DURATION=2

#[gcode_macro bead_soak_counter]
#gcode:

#[delayed_gcode welcome]
#initial_duration: 5.
#gcode:
#	M118 Welcome!
#	vars_heat_soak
#	#UPDATE_DELAYED_GCODE ID=welcome DURATION=5
#	#G4 P2000
#	#M118 saved bed-temp   {printer['gcode_macro vars_heat_soak'].soak_current_temp}
#	#M118 saved bed-target {printer['gcode_macro vars_heat_soak'].soak_target_temp}
#	#M118 current temp = {% ["gcode_macro vars_heat_soak"].soak_current_temp %}°C
#	#M118 Start: BED={printer['gcode_macro vars_heat_soak'].soak_current_temp}

[gcode_macro START_PROBE]
variable_bed_temp: 0
gcode:
	# Save target temperature to bed_temp variable
	SET_GCODE_VARIABLE MACRO=START_PROBE VARIABLE=bed_temp VALUE={printer.heater_bed.target}
	# Call FINISH_PROBE macro at completion of probe
	FINISH_PROBE

[gcode_macro FINISH_PROBE]
gcode:
	# print temperature
	M118 start-probe temp {printer["gcode_macro START_PROBE"].bed_temp}

[gcode_macro GLOBAL] 
variable_t1:0.8 
gcode:
	{% set myglobal = printer["gcode_macro GLOBAL"] %}

[gcode_macro _tst_global]
gcode:
	{% set myglobal = printer["gcode_macro GLOBAL"] %}
	M118 T1 is {myglobal.t1}


#[delayed_gcode report_temp]
#initial_duration: 2.
#gcode:
#  {action_respond_info("Extruder Temp: %.1f" % (printer.extruder0.temperature))}
#  UPDATE_DELAYED_GCODE ID=report_temp DURATION=2







