#####################################################################
#	BASIC Macros (Start & End)
#####################################################################

# Malformed command 'PRINT_START EXTRUDER=215 BED=60 CHAMBER=0 CURR_BED_TYPE=Engineering Plate FILAMENT_TYPE=PLA'

[gcode_macro _EXPERT_PRINT_START]
gcode:
  {% set global = printer["gcode_macro GLOBAL"] %}
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set CURR_BED_TYPE = params.CURR_BED_TYPE|lower|replace(" ", "_") %}  #|lower|replace(" ", "_") is there because otherwise Klipper wont understand the string
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Debug-Output: the given parameters
  RESPOND TYPE=echo MSG='Start: BED={target_bed} EXTRUDER={target_extruder} CHAMBER={target_chamber} CURR_BED_TYPE={CURR_BED_TYPE} FILAMENT_TYPE={FILAMENT_TYPE} BED_soak_TIME={global.bed_soak_time}'
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  #{% if params.BED|int > 90 %}
  #RESPOND TYPE=echo MSG="Bed: {target_bed}c"           # Displays info
	#STATUS_HEATING                                      # Sets SB-leds to heating-mode
	#M106 S255                                           # Turns on the PT-fan

	#G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
	#M190 S{target_bed}                                  # Sets the target temp for the bed
	#RESPOND TYPE=echo MSG="Heatsoak: {target_chamber}c"  # Displays info
  #SET_HEATER_TEMPERATURE HEATER=<heater_name> [TARGET=<target_temperature>]
	#TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  #{% else %}
	STATUS_HEATING                                      # Sets SB-leds to heating-mode
	G1 X{x_wait} Y{y_wait} Z50 F9000                    # Goes to center of the bed
	RESPOND TYPE=echo MSG="Bed: {target_bed} C"         # Displays info
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed-2} MAXIMUM={target_bed+5} # Sets the target temp for the bed
	G4 P{0}                         # Waits 5/0 min for the bedtemp to stabilize
  #{% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  ## TEMPERATURE_WAIT SENSOR=<config_name> [MINIMUM=<target>] [MAXIMUM=<target>]
  RESPOND TYPE=echo MSG="Hotend: 150c"          # Displays info
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=147 MAXIMUM=155      # Heats the nozzle to 150c

  # Turn off BedFans because of Heat deviation
  #SET_FAN_SPEED FAN=BedFans SPEED=0
  #SET_FAN_SPEED FAN=Nevermore SPEED=0

  # QGL
  RESPOND TYPE=echo MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  M106 S0                         # DD Turns PT-Fan off
  quad_gantry_level               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL

  #Bed Mesh
  RESPOND TYPE=echo MSG="Bed mesh"    # Displays info
  STATUS_MESHING           #          # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh

  # To turn Bed Fans if needed back on
  #M190 S{target_bed}

  # Turns on the nevermore DD reactivate when installed
  #SET_PIN PIN=nevermore VALUE=1                      
  #SET_FAN_SPEED FAN=Nevermore SPEED=1

  # We set our offset based on filament and Bed type
  CONFIGURE_BED_OFFSET CURR_BED_TYPE="{CURR_BED_TYPE}"
  CONFIGURE_FILAMENT_OFFSET FILAMENT_TYPE={FILAMENT_TYPE}       # Sets Z-Offset addition due to CONFIGURE_FILAMENT_OFFSET Macro

  # Heats up the nozzle up to target via data from slicer
  RESPOND TYPE=echo MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X40 Y302 Z15 F9000
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={target_extruder}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={target_extruder-1} MAXIMUM={target_extruder+1}                                       # Heats the nozzle to printing temp
  G1 E-2 F100

  # DD Reactivate when Purge Bucket is installed
  RESPOND TYPE=echo MSG="SHAKE IT"
  CLEAN_NOZZLE

  SMART_PARK
  RESPOND TYPE=echo MSG="Line Purge"
  LINE_PURGE

[gcode_macro _expert_PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
  {% set global = printer["gcode_macro GLOBAL"] %}
	M400                           ; wait for buffer to clear
	G92 E0                         ; zero the extruder
	G1 E-1.0 F3600                 ; retract filament
	G91                            ; relative positioning
	G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
	TURN_OFF_HEATERS
	M107                           ; turn off fan
	G1 Z2 F3000                    ; move nozzle up 2mm
	G1 Z20 F3000
	G90                            ; absolute positioning
	G0  X150 Y250 F3600            ; park nozzle at rear

